// MongoDB provider test schema
generator client {
  provider = "prisma-client-js"
}

generator trpc {
  provider    = "node ../../../lib/generator.js"
  output      = "../../generated/mongodb"
  contextPath = "../../test-context"
  withZod     = true
}

datasource db {
  provider = "mongodb"
  url      = "mongodb://localhost:27017/test"
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  age       Int?
  profile   Profile?
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("users")
}

model Profile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  bio    String?
  avatar String?
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("profiles")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean  @default(false)
  views     Int      @default(0)
  tags      String[]
  metadata  Json?
  authorId  String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("posts")
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  parentId    String?   @db.ObjectId
  parent      Category? @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children    Category[] @relation("CategoryHierarchy")
  
  @@map("categories")
}